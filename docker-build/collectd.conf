Hostname    "{APP_NAME}"
FQDNLookup   true
BaseDir     "/var/lib/collectd"
PIDFile     "/var/run/collectd/collectd.pid"
PluginDir   "/usr/lib/collectd"
TypesDB     "/usr/share/collectd/types.db"

#----------------------------------------------------------------------------#
# When enabled, plugins are loaded automatically with the default options    #
# when an appropriate <Plugin ...> block is encountered.                     #
# Disabled by default.                                                       #
#----------------------------------------------------------------------------#
#AutoLoadPlugin false

#----------------------------------------------------------------------------#
# Interval at which to query values. This may be overwritten on a per-plugin #
# base by using the 'Interval' option of the LoadPlugin block:               #
#   <LoadPlugin foo>                                                         #
#       Interval 60                                                          #
#   </LoadPlugin>                                                            #
#----------------------------------------------------------------------------#
Interval     10

Timeout      2
ReadThreads  5
WriteThreads 5

# Limit the size of the write queue. Default is no limit. Setting up a limit is
# recommended for servers handling a high volume of traffic.
#WriteQueueLimitHigh 1000000
#WriteQueueLimitLow   800000

##############################################################################
# Logging                                                                    #
#----------------------------------------------------------------------------#
# Plugins which provide logging functions should be loaded first, so log     #
# messages generated when loading or configuring other plugins can be        #
# accessed.                                                                  #
##############################################################################

#LoadPlugin syslog
LoadPlugin logfile
<Plugin "logfile">
	LogLevel "info"
	File "/var/log/collectd.log"
	Timestamp true
</Plugin>

##############################################################################
# Network                                                                    #
##############################################################################
LoadPlugin network
<Plugin network>
    Server "{SERVER_IP}" "25826"
</Plugin>


##############################################################################
# LoadPlugin section                                                         #
#----------------------------------------------------------------------------#
# Lines beginning with a single `#' belong to plugins which have been built  #
# but are disabled by default.                                               #
#                                                                            #
# Lines begnning with `##' belong to plugins which have not been built due   #
# to missing dependencies or because they have been deactivated explicitly.  #
##############################################################################

# Use the aggregation plugin to aggregate specific statistics
LoadPlugin aggregation
<Plugin aggregation>
    <Aggregation>
        Plugin "cpu"
        Type "cpu"

        GroupBy "Host"
        GroupBy "TypeInstance"

        CalculateSum true
        CalculateAverage true
    </Aggregation>
</Plugin>

# Collect CPU statistics
LoadPlugin cpu
<Plugin cpu>
	ReportByState = true
	ReportByCpu = true
	ValuesPercentage = true
</Plugin>

# Collect disk IO statistics
LoadPlugin disk
<Plugin disk>
    Disk "/^[hs]d[a-f][0-9]?$/"
    IgnoreSelected false
</Plugin>

# Collect network interface usage statistics
LoadPlugin interface
<Plugin interface>
    Interface "eth0"
    IgnoreSelected false
</Plugin>

# Collect system load statistics
LoadPlugin load

# Collect memory utilization statistics
LoadPlugin memory
<Plugin memory>
    # Don't use absolute as each AWS ec2 instance is different, use percentage instead to get a uniform view
    ValuesAbsolute false
    ValuesPercentage true
</Plugin>

LoadPlugin swap
<Plugin "swap">
    ReportByDevice false
    ReportBytes true
</Plugin>

LoadPlugin processes
<Plugin processes>
	CollectFileDescriptor true
	CollectContextSwitch true
	CollectMemoryMaps true
	Process "java"
	# ProcessMatch "name" "regex"
	<Process "collectd">
		CollectFileDescriptor false
		CollectContextSwitch false
	</Process>
#	<ProcessMatch "name" "regex">
#		CollectFileDescriptor false
#		CollectContextSwitch true
#	</Process>
</Plugin>

LoadPlugin tcpconns
<Plugin tcpconns>
	ListeningPorts false
	AllPortsSummary false
	LocalPort "9090"
</Plugin>

LoadPlugin java
<Plugin java>
    JVMArg "-verbose:jni"
    JVMArg "-Djava.class.path=/usr/share/collectd/java/collectd-api.jar:/usr/share/collectd/java/generic-jmx.jar"

    LoadPlugin "org.collectd.java.GenericJMX"
    <Plugin "GenericJMX">

        # General JVM configuration
        <MBean "memory">
            ObjectName "java.lang:type=Memory,*"
            InstancePrefix "java_memory"
            #InstanceFrom "name"

            <Value>
                Type "memory"
                InstancePrefix "heap-"
                #InstanceFrom ""
                Table true
                Attribute "HeapMemoryUsage"
            </Value>

            <Value>
                Type "memory"
                InstancePrefix "nonheap-"
                #InstanceFrom ""
                Table true
                Attribute "NonHeapMemoryUsage"
            </Value>
        </MBean>

        <MBean "memory_pool">
            ObjectName "java.lang:type=MemoryPool,*"
            InstancePrefix "java_memory_pool-"
            InstanceFrom "name"

            <Value>
                Type "memory"
                #InstancePrefix ""
                #InstanceFrom ""
                Table true
                Attribute "Usage"
            </Value>
        </MBean>

        <MBean "classes">
            ObjectName "java.lang:type=ClassLoading"
            InstancePrefix "java"
            #InstanceFrom ""

            <Value>
                Type "gauge"
                InstancePrefix "loaded_classes"
                #InstanceFrom ""
                Table false
                Attribute "LoadedClassCount"
            </Value>
        </MBean>

        <MBean "compilation">
            ObjectName "java.lang:type=Compilation"
            InstancePrefix "java"
            #InstanceFrom ""

            <Value>
                Type "total_time_in_ms"
                InstancePrefix "compilation_time"
                #InstanceFrom ""
                Table false
                Attribute "TotalCompilationTime"
            </Value>
        </MBean>

        <MBean "garbage_collector">
            ObjectName "java.lang:type=GarbageCollector,*"
            InstancePrefix "java_gc-"
            InstanceFrom "name"

            <Value>
                Type "invocations"
                #InstancePrefix ""
                #InstanceFrom ""
                Table false
                Attribute "CollectionCount"
            </Value>

            <Value>
                Type "total_time_in_ms"
                InstancePrefix "collection_time"
                #InstanceFrom ""
                Table false
                Attribute "CollectionTime"
            </Value>
        </MBean>

        <MBean "jvm_localhost_os">
            ObjectName "java.lang:type=OperatingSystem"

            # Open file descriptors
            <Value>
                Type "gauge"
                InstancePrefix "os-open_fd_count"
                Table false
                Attribute "OpenFileDescriptorCount"
            </Value>

            # Max. allowed handles for user under which the JavaVM is running
            <Value>
                Type "gauge"
                InstancePrefix "os-max_fd_count"
                Table false
                Attribute "MaxFileDescriptorCount"
            </Value>

            # Process time used by the JavaVM
            <Value>
                Type "counter"
                InstancePrefix "os-process_cpu_time"
                Table false
                Attribute "ProcessCpuTime"
            </Value>
        </MBean>

        <MBean "jvm_runtime">
          ObjectName "java.lang:type=Runtime"
          <Value>
            Type "counter"
            InstancePrefix "runtime-uptime"
            Table false
            Attribute "Uptime"
          </Value>
        </MBean>

        <Connection>
            #Host "localhost"
            ServiceURL "service:jmx:rmi:///jndi/rmi://localhost:3333/jmxrmi"

            User "monitorRole"

            # JVM
            Collect "memory"
            Collect "memory_pool"
            Collect "classes"
            Collect "compilation"
            Collect "garbage_collector"
            Collect "jvm_localhost_os"
	          Collect "jvm_runtime"
        </Connection>
    </Plugin>

</Plugin>

Include "/etc/collectd"
